# Generated by Django 4.2.3 on 2023-08-17 21:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import najot.models.auth


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('last_name', models.CharField(max_length=128)),
                ('password', models.CharField(max_length=128)),
                ('status', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', najot.models.auth.CustomerUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('info', models.TextField()),
                ('img', models.ImageField(blank=True, null=True, upload_to='clink', verbose_name='Clinka rasmi')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_link', models.CharField(max_length=3000)),
                ('phone', models.CharField(max_length=21)),
                ('email', models.EmailField(max_length=254)),
                ('address_uz', models.CharField(max_length=589)),
                ('address_ru', models.CharField(max_length=589)),
                ('address_en', models.CharField(max_length=589)),
                ('telegram', models.CharField(max_length=589)),
                ('insagram', models.CharField(max_length=589)),
                ('facebook', models.CharField(max_length=589)),
                ('twetter', models.CharField(max_length=589)),
                ('tiktok', models.CharField(max_length=589)),
                ('youtube', models.CharField(max_length=589)),
            ],
        ),
        migrations.CreateModel(
            name='Doktor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Ism')),
                ('familya', models.CharField(max_length=128, verbose_name='Familya')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefon raqam')),
                ('img', models.ImageField(blank=True, null=True, upload_to='docs', verbose_name='Rasm')),
                ('xona_raqami', models.SmallIntegerField(default=1)),
                ('info_uz', models.TextField(verbose_name='Shifokor haqida qisqacha malumot')),
                ('tajriba', models.SmallIntegerField()),
                ('info_ru', models.TextField(verbose_name='Краткая информация о докторе')),
                ('info_en', models.TextField(verbose_name='Brief information about the doctor')),
                ('gender', models.BooleanField(default=True, verbose_name='Jinsi')),
                ('email', models.EmailField(max_length=254, verbose_name='Elektron pochta')),
                ('dushanba', models.BooleanField(default=True, verbose_name='dushanba')),
                ('seshanba', models.BooleanField(default=True, verbose_name='seshanba')),
                ('chorshanba', models.BooleanField(default=True, verbose_name='chorshanba')),
                ('payshanba', models.BooleanField(default=True, verbose_name='payshanba')),
                ('juma', models.BooleanField(default=True, verbose_name='juma')),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024)),
                ('phone', models.CharField(max_length=20)),
                ('is_conf', models.BooleanField(default=False)),
                ('is_expire', models.BooleanField(default=False)),
                ('tires', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=128)),
                ('name_ru', models.CharField(max_length=128)),
                ('name_en', models.CharField(max_length=128)),
                ('info_uz', models.TextField()),
                ('info_ru', models.TextField()),
                ('info_en', models.TextField()),
                ('svg', models.CharField(max_length=10000)),
                ('img', models.FileField(upload_to='services')),
                ('price', models.CharField(default='50 000 UZS', max_length=128, verbose_name='Narxi')),
                ('desktraptoin_uz', models.TextField()),
                ('desktraptoin_ru', models.TextField()),
                ('desktraptoin_en', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.TimeField()),
                ('status', models.BooleanField(default=False)),
                ('price_doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='najot.doktor')),
            ],
        ),
        migrations.AddField(
            model_name='doktor',
            name='services',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='najot.service'),
        ),
        migrations.CreateModel(
            name='DocTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('free', models.BooleanField(default=True)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='najot.doktor')),
            ],
        ),
        migrations.CreateModel(
            name='DocReating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.SmallIntegerField(choices=[(1, '     ⭐️ '), (2, '    ⭐️⭐️ '), (3, '   ⭐️⭐️⭐️ '), (4, '  ⭐️⭐️⭐️⭐️ '), (5, ' ⭐️⭐️⭐️⭐️⭐️ ')])),
                ('feed', models.TextField()),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='najot.doktor')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Reating', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
